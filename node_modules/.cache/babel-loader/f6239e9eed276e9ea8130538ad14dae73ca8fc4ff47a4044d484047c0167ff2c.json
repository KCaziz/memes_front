{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AZIZ\\\\Desktop\\\\gen_meme\\\\client\\\\src\\\\components\\\\MemeGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport html2canvas from 'html2canvas';\nimport toast from 'react-hot-toast';\nimport './component.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MemeGenerator = () => {\n  _s();\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [imageUrl, setImageUrl] = useState('');\n  const [cloudinaryId, setCloudinaryId] = useState('');\n  const [topText, setTopText] = useState('');\n  const [bottomText, setBottomText] = useState('');\n  const [title, setTitle] = useState('');\n  const [isUploading, setIsUploading] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const memeRef = useRef(null);\n  const handleImageUpload = async event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    if (file.size > 5 * 1024 * 1024) {\n      toast.error('Le fichier est trop volumineux (max 5MB)');\n      return;\n    }\n    setSelectedImage(file);\n    console.log(selectedImage);\n    setIsUploading(true);\n  };\n  const generateFinalMemeAndUpload = async () => {\n    if (!memeRef.current) return;\n    setIsUploading(true);\n    try {\n      const canvas = await html2canvas(memeRef.current, {\n        useCORS: true,\n        backgroundColor: '#000',\n        scale: 2\n      });\n      const blob = await new Promise(resolve => canvas.toBlob(resolve, 'image/png'));\n      const formData = new FormData();\n      formData.append('image', blob, 'meme.png');\n      const response = await axios.post(\"http://localhost:5000/api/upload\", formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setImageUrl(response.data.imageUrl);\n      setCloudinaryId(response.data.cloudinaryId);\n      toast.success('MÃ¨me gÃ©nÃ©rÃ© et uploadÃ©!');\n      return true;\n    } catch (error) {\n      console.error('Erreur lors de la gÃ©nÃ©ration:', error);\n      toast.error('Erreur pendant le rendu du mÃ¨me');\n      return false;\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  const handleSaveMeme = async () => {\n    if (!title.trim()) {\n      toast.error('Veuillez ajouter un titre');\n      return;\n    }\n    const success = await generateFinalMemeAndUpload();\n    if (!success || !imageUrl) {\n      toast.error(\"L'image avec le texte n'a pas pu Ãªtre gÃ©nÃ©rÃ©e.\");\n      return;\n    }\n    setIsSaving(true);\n    try {\n      const memeData = {\n        title: title.trim(),\n        imageUrl,\n        cloudinaryId\n      };\n      await axios.post('http://localhost:5000/api/memes', memeData);\n      toast.success('MÃ¨me sauvegardÃ© avec succÃ¨s!');\n      resetForm();\n    } catch (error) {\n      console.error('Erreur sauvegarde:', error);\n      toast.error('Erreur lors de la sauvegarde');\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  const handleDownload = async () => {\n    if (!memeRef.current) return;\n    try {\n      const canvas = await html2canvas(memeRef.current, {\n        backgroundColor: null,\n        scale: 2\n      });\n      const link = document.createElement('a');\n      link.download = `${title || 'meme'}.png`;\n      link.href = canvas.toDataURL();\n      link.click();\n      toast.success('MÃ¨me tÃ©lÃ©chargÃ©!');\n    } catch (error) {\n      console.error('Erreur tÃ©lÃ©chargement:', error);\n      toast.error('Erreur lors du tÃ©lÃ©chargement');\n    }\n  };\n  const handleShare = async () => {\n    if (navigator.share && imageUrl) {\n      try {\n        await navigator.share({\n          title: `MÃ¨me: ${title}`,\n          text: `Regardez ce mÃ¨me que j'ai crÃ©Ã©: ${title}`,\n          url: imageUrl\n        });\n      } catch (error) {\n        console.log('Partage annulÃ©');\n      }\n    } else {\n      // Fallback: copier l'URL\n      if (imageUrl) {\n        navigator.clipboard.writeText(imageUrl);\n        toast.success('URL copiÃ©e dans le presse-papier!');\n      }\n    }\n  };\n  const resetForm = () => {\n    setSelectedImage(null);\n    setImageUrl('');\n    setCloudinaryId('');\n    setTopText('');\n    setBottomText('');\n    setTitle('');\n  };\n  console.log(selectedImage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"meme-generator\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"generator-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Cr\\xE9ateur de M\\xE8mes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generator-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"1. Choisir une image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-area\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              onChange: handleImageUpload,\n              className: \"file-input\",\n              id: \"image-upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"image-upload\",\n              className: \"upload-label\",\n              children: isUploading ? 'Upload en cours...' : 'ðŸ“¤ Choisir une image'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), selectedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"2. Ajouter du texte\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Titre du m\\xE8me\",\n              value: title,\n              onChange: e => setTitle(e.target.value),\n              className: \"text-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Texte du haut\",\n              value: topText,\n              onChange: e => setTopText(e.target.value),\n              className: \"text-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Texte du bas\",\n              value: bottomText,\n              onChange: e => setBottomText(e.target.value),\n              className: \"text-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), selectedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"preview-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"3. Aper\\xE7u\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meme-preview\",\n            ref: memeRef,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meme-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: selectedImage,\n                alt: \"Meme base\",\n                className: \"meme-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this), topText && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"meme-text meme-text-top\",\n                children: topText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 21\n              }, this), bottomText && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"meme-text meme-text-bottom\",\n                children: bottomText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSaveMeme,\n              disabled: isSaving,\n              className: \"action-btn save-btn\",\n              children: isSaving ? 'Sauvegarde...' : 'ðŸ’¾ Sauvegarder'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleDownload,\n              className: \"action-btn download-btn\",\n              children: \"\\uD83D\\uDCE5 T\\xE9l\\xE9charger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleShare,\n              className: \"action-btn share-btn\",\n              children: \"\\uD83D\\uDCE4 Partager\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: resetForm,\n              className: \"action-btn reset-btn\",\n              children: \"\\uD83D\\uDD04 Nouveau\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_s(MemeGenerator, \"j5ehuBPg5H0X8M2C5+04X0ILaGM=\");\n_c = MemeGenerator;\nexport default MemeGenerator;\nvar _c;\n$RefreshReg$(_c, \"MemeGenerator\");","map":{"version":3,"names":["React","useState","useRef","axios","html2canvas","toast","jsxDEV","_jsxDEV","MemeGenerator","_s","selectedImage","setSelectedImage","imageUrl","setImageUrl","cloudinaryId","setCloudinaryId","topText","setTopText","bottomText","setBottomText","title","setTitle","isUploading","setIsUploading","isSaving","setIsSaving","memeRef","handleImageUpload","event","file","target","files","size","error","console","log","generateFinalMemeAndUpload","current","canvas","useCORS","backgroundColor","scale","blob","Promise","resolve","toBlob","formData","FormData","append","response","post","headers","data","success","handleSaveMeme","trim","memeData","resetForm","handleDownload","link","document","createElement","download","href","toDataURL","click","handleShare","navigator","share","text","url","clipboard","writeText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","id","htmlFor","placeholder","value","e","ref","src","alt","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/AZIZ/Desktop/gen_meme/client/src/components/MemeGenerator.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport html2canvas from 'html2canvas';\r\nimport toast from 'react-hot-toast';\r\nimport './component.css';\r\n\r\nconst MemeGenerator = () => {\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const [imageUrl, setImageUrl] = useState('');\r\n  const [cloudinaryId, setCloudinaryId] = useState('');\r\n  const [topText, setTopText] = useState('');\r\n  const [bottomText, setBottomText] = useState('');\r\n  const [title, setTitle] = useState('');\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const memeRef = useRef(null);\r\n\r\n  const handleImageUpload = async (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    if (file.size > 5 * 1024 * 1024) {\r\n      toast.error('Le fichier est trop volumineux (max 5MB)');\r\n      return;\r\n    }\r\n    setSelectedImage(file);\r\n    console.log(selectedImage);\r\n    setIsUploading(true);\r\n  };\r\n\r\n  const generateFinalMemeAndUpload = async () => {\r\n    if (!memeRef.current) return;\r\n  \r\n    setIsUploading(true);\r\n    try {\r\n      const canvas = await html2canvas(memeRef.current, {\r\n        useCORS: true,\r\n        backgroundColor: '#000',\r\n        scale: 2,\r\n      });\r\n  \r\n      const blob = await new Promise((resolve) =>\r\n        canvas.toBlob(resolve, 'image/png')\r\n      );\r\n  \r\n      const formData = new FormData();\r\n      formData.append('image', blob, 'meme.png');\r\n  \r\n      const response = await axios.post(\"http://localhost:5000/api/upload\", formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n  \r\n      setImageUrl(response.data.imageUrl);\r\n      setCloudinaryId(response.data.cloudinaryId);\r\n      toast.success('MÃ¨me gÃ©nÃ©rÃ© et uploadÃ©!');\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Erreur lors de la gÃ©nÃ©ration:', error);\r\n      toast.error('Erreur pendant le rendu du mÃ¨me');\r\n      return false;\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n  \r\n  \r\n  const handleSaveMeme = async () => {\r\n    if (!title.trim()) {\r\n      toast.error('Veuillez ajouter un titre');\r\n      return;\r\n    }\r\n    const success = await generateFinalMemeAndUpload();\r\n    if (!success || !imageUrl) {\r\n      toast.error(\"L'image avec le texte n'a pas pu Ãªtre gÃ©nÃ©rÃ©e.\");\r\n      return;\r\n    }\r\n    setIsSaving(true);\r\n    try {\r\n      const memeData = {\r\n        title: title.trim(),\r\n        imageUrl,\r\n        cloudinaryId,\r\n      };\r\n      await axios.post('http://localhost:5000/api/memes', memeData);\r\n      toast.success('MÃ¨me sauvegardÃ© avec succÃ¨s!');\r\n      resetForm();\r\n    } catch (error) {\r\n      console.error('Erreur sauvegarde:', error);\r\n      toast.error('Erreur lors de la sauvegarde');\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n  \r\n\r\n  const handleDownload = async () => {\r\n    if (!memeRef.current) return;\r\n\r\n    try {\r\n      const canvas = await html2canvas(memeRef.current, {\r\n        backgroundColor: null,\r\n        scale: 2,\r\n      });\r\n\r\n      const link = document.createElement('a');\r\n      link.download = `${title || 'meme'}.png`;\r\n      link.href = canvas.toDataURL();\r\n      link.click();\r\n      \r\n      toast.success('MÃ¨me tÃ©lÃ©chargÃ©!');\r\n    } catch (error) {\r\n      console.error('Erreur tÃ©lÃ©chargement:', error);\r\n      toast.error('Erreur lors du tÃ©lÃ©chargement');\r\n    }\r\n  };\r\n\r\n  const handleShare = async () => {\r\n    if (navigator.share && imageUrl) {\r\n      try {\r\n        await navigator.share({\r\n          title: `MÃ¨me: ${title}`,\r\n          text: `Regardez ce mÃ¨me que j'ai crÃ©Ã©: ${title}`,\r\n          url: imageUrl,\r\n        });\r\n      } catch (error) {\r\n        console.log('Partage annulÃ©');\r\n      }\r\n    } else {\r\n      // Fallback: copier l'URL\r\n      if (imageUrl) {\r\n        navigator.clipboard.writeText(imageUrl);\r\n        toast.success('URL copiÃ©e dans le presse-papier!');\r\n      }\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setSelectedImage(null);\r\n    setImageUrl('');\r\n    setCloudinaryId('');\r\n    setTopText('');\r\n    setBottomText('');\r\n    setTitle('');\r\n  };\r\n\r\n  console.log(selectedImage);\r\n  \r\n\r\n  return (\r\n    <div className=\"meme-generator\">\r\n      <div className=\"generator-container\">\r\n        <h1>CrÃ©ateur de MÃ¨mes</h1>\r\n        \r\n        <div className=\"generator-content\">\r\n          {/* Section Upload */}\r\n          <div className=\"upload-section\">\r\n            <h2>1. Choisir une image</h2>\r\n            <div className=\"upload-area\">\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={handleImageUpload}\r\n                className=\"file-input\"\r\n                id=\"image-upload\"\r\n              />\r\n              <label htmlFor=\"image-upload\" className=\"upload-label\">\r\n                {isUploading ? 'Upload en cours...' : 'ðŸ“¤ Choisir une image'}\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Section Texte */}\r\n          {selectedImage && (\r\n            <div className=\"text-section\">\r\n              <h2>2. Ajouter du texte</h2>\r\n              <div className=\"input-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Titre du mÃ¨me\"\r\n                  value={title}\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                  className=\"text-input\"\r\n                />\r\n              </div>\r\n              <div className=\"input-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Texte du haut\"\r\n                  value={topText}\r\n                  onChange={(e) => setTopText(e.target.value)}\r\n                  className=\"text-input\"\r\n                />\r\n              </div>\r\n              <div className=\"input-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Texte du bas\"\r\n                  value={bottomText}\r\n                  onChange={(e) => setBottomText(e.target.value)}\r\n                  className=\"text-input\"\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* AperÃ§u */}\r\n          {selectedImage && (\r\n            <div className=\"preview-section\">\r\n              <h2>3. AperÃ§u</h2>\r\n              <div className=\"meme-preview\" ref={memeRef}>\r\n                <div className=\"meme-container\">\r\n                  <img src={selectedImage} alt=\"Meme base\" className=\"meme-image\" />\r\n                  {topText && (\r\n                    <div className=\"meme-text meme-text-top\">\r\n                      {topText}\r\n                    </div>\r\n                  )}\r\n                  {bottomText && (\r\n                    <div className=\"meme-text meme-text-bottom\">\r\n                      {bottomText}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Actions */}\r\n              <div className=\"actions\">\r\n                <button\r\n                  onClick={handleSaveMeme}\r\n                  disabled={isSaving}\r\n                  className=\"action-btn save-btn\"\r\n                >\r\n                  {isSaving ? 'Sauvegarde...' : 'ðŸ’¾ Sauvegarder'}\r\n                </button>\r\n                <button\r\n                  onClick={handleDownload}\r\n                  className=\"action-btn download-btn\"\r\n                >\r\n                  ðŸ“¥ TÃ©lÃ©charger\r\n                </button>\r\n                <button\r\n                  onClick={handleShare}\r\n                  className=\"action-btn share-btn\"\r\n                >\r\n                  ðŸ“¤ Partager\r\n                </button>\r\n                <button\r\n                  onClick={resetForm}\r\n                  className=\"action-btn reset-btn\"\r\n                >\r\n                  ðŸ”„ Nouveau\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MemeGenerator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}