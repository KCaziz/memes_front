{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AZIZ\\\\Desktop\\\\gen_meme\\\\client\\\\src\\\\components\\\\MemeGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport html2canvas from 'html2canvas';\nimport toast from 'react-hot-toast';\nimport './component.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MemeGenerator = () => {\n  _s();\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [imageUrl, setImageUrl] = useState('');\n  const [cloudinaryId, setCloudinaryId] = useState('');\n  const [topText, setTopText] = useState('');\n  const [bottomText, setBottomText] = useState('');\n  const [title, setTitle] = useState('');\n  const [isUploading, setIsUploading] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const memeRef = useRef(null);\n  const handleImageUpload = async event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    if (file.size > 5 * 1024 * 1024) {\n      toast.error('Le fichier est trop volumineux (max 5MB)');\n      return;\n    }\n    // CrÃ©ez une URL pour l'aperÃ§u\n    // const imageUrl = URL.createObjectURL(file);\n    setSelectedImage(file);\n    if (file) {\n      setIsUploading(true);\n    }\n  };\n\n  //   useEffect(() => {\n  //     return () => {\n  //       if (selectedImage?.preview) {\n  //         URL.revokeObjectURL(selectedImage.preview);\n  //       }\n  //     };\n  //   }, [selectedImage]);\n\n  const generateMemeImage = async (imageFile, topText, bottomText) => {\n    return new Promise((resolve, reject) => {\n      const img = new Image();\n      img.onload = () => {\n        const canvas = document.createElement(\"canvas\");\n        const ctx = canvas.getContext(\"2d\");\n        canvas.width = img.width;\n        canvas.height = img.height;\n\n        // Dessiner l'image de base\n        ctx.drawImage(img, 0, 0);\n\n        // Style texte commun\n        ctx.font = `bold ${Math.floor(canvas.width / 10)}px Impact`;\n        ctx.fillStyle = \"white\";\n        ctx.strokeStyle = \"black\";\n        ctx.lineWidth = 6;\n        ctx.textAlign = \"center\";\n\n        // Dessiner le texte du haut\n        ctx.textBaseline = \"top\";\n        ctx.strokeText(topText, canvas.width / 2, 20);\n        ctx.fillText(topText, canvas.width / 2, 20);\n\n        // Dessiner le texte du bas (avec fond noir)\n        const textY = canvas.height / 2;\n        const textHeight = Math.floor(canvas.width / 10) + 20;\n\n        // fond noir rectangulaire\n        ctx.fillStyle = \"black\";\n        ctx.fillRect(0, textY - 10, canvas.width, textHeight);\n\n        // texte blanc par-dessus\n        ctx.fillStyle = \"white\";\n        ctx.textBaseline = \"top\";\n        ctx.fillText(bottomText, canvas.width / 2, textY);\n        canvas.toBlob(blob => {\n          if (blob) resolve(blob);else reject(new Error(\"Ã‰chec gÃ©nÃ©ration mÃ¨me\"));\n        }, \"image/png\");\n      };\n      img.onerror = reject;\n      img.src = URL.createObjectURL(imageFile);\n    });\n  };\n  const generateFinalMemeAndUpload = async () => {\n    if (!memeRef.current) return;\n    setIsUploading(true);\n    try {\n      const blob = await generateMemeImage(selectedImage, \"TOP TEXT\", \"BOTTOM TEXT\");\n      const formData = new FormData();\n      formData.append('image', blob, 'meme.png');\n      const response = await axios.post(\"http://localhost:5000/api/upload\", formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setImageUrl(response.data.imageUrl);\n      setCloudinaryId(response.data.cloudinaryId);\n      toast.success('MÃ¨me gÃ©nÃ©rÃ© et uploadÃ©!');\n      return true;\n    } catch (error) {\n      console.error('Erreur lors de la gÃ©nÃ©ration:', error);\n      toast.error('Erreur pendant le rendu du mÃ¨me');\n      return false;\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  const handleSaveMeme = async () => {\n    if (!title.trim()) {\n      toast.error('Veuillez ajouter un titre');\n      return;\n    }\n    const success = await generateFinalMemeAndUpload();\n    if (!success || !imageUrl) {\n      toast.error(\"L'image avec le texte n'a pas pu Ãªtre gÃ©nÃ©rÃ©e.\");\n      return;\n    }\n    setIsSaving(true);\n    try {\n      const memeData = {\n        title: title.trim(),\n        imageUrl,\n        cloudinaryId\n      };\n      await axios.post('http://localhost:5000/api/memes', memeData);\n      toast.success('MÃ¨me sauvegardÃ© avec succÃ¨s!');\n      resetForm();\n    } catch (error) {\n      console.error('Erreur sauvegarde:', error);\n      toast.error('Erreur lors de la sauvegarde');\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  const handleDownload = async () => {\n    if (!memeRef.current) return;\n    try {\n      const canvas = await html2canvas(memeRef.current, {\n        backgroundColor: null,\n        scale: 2\n      });\n      const link = document.createElement('a');\n      link.download = `${title || 'meme'}.png`;\n      link.href = canvas.toDataURL();\n      link.click();\n      toast.success('MÃ¨me tÃ©lÃ©chargÃ©!');\n    } catch (error) {\n      console.error('Erreur tÃ©lÃ©chargement:', error);\n      toast.error('Erreur lors du tÃ©lÃ©chargement');\n    }\n  };\n  const handleShare = async () => {\n    if (navigator.share && imageUrl) {\n      try {\n        await navigator.share({\n          title: `MÃ¨me: ${title}`,\n          text: `Regardez ce mÃ¨me que j'ai crÃ©Ã©: ${title}`,\n          url: imageUrl\n        });\n      } catch (error) {\n        console.log('Partage annulÃ©');\n      }\n    } else {\n      // Fallback: copier l'URL\n      if (imageUrl) {\n        navigator.clipboard.writeText(imageUrl);\n        toast.success('URL copiÃ©e dans le presse-papier!');\n      }\n    }\n  };\n  const resetForm = () => {\n    setSelectedImage(null);\n    setImageUrl('');\n    setCloudinaryId('');\n    setTopText('');\n    setBottomText('');\n    setTitle('');\n  };\n  console.log(selectedImage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"meme-generator\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"generator-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Cr\\xE9ateur de M\\xE8mes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generator-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"1. Choisir une image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-area\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              onChange: handleImageUpload,\n              className: \"file-input\",\n              id: \"image-upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"image-upload\",\n              className: \"upload-label\",\n              children: isUploading ? 'Upload en cours...' : 'ðŸ“¤ Choisir une image'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), selectedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"2. Ajouter du texte\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Titre du m\\xE8me\",\n              value: title,\n              onChange: e => setTitle(e.target.value),\n              className: \"text-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Texte du haut\",\n              value: topText,\n              onChange: e => setTopText(e.target.value),\n              className: \"text-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Texte du bas\",\n              value: bottomText,\n              onChange: e => setBottomText(e.target.value),\n              className: \"text-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), selectedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"preview-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"3. Aper\\xE7u\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meme-preview\",\n            ref: memeRef,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meme-container\",\n              children: [selectedImage && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: URL.createObjectURL(selectedImage),\n                alt: \"preview\",\n                style: {\n                  maxWidth: \"400px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 17\n              }, this), topText && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"meme-text meme-text-top\",\n                children: topText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 21\n              }, this), bottomText && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"meme-text meme-text-bottom\",\n                children: bottomText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSaveMeme,\n              disabled: isSaving,\n              className: \"action-btn save-btn\",\n              children: isSaving ? 'Sauvegarde...' : 'ðŸ’¾ Sauvegarder'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleDownload,\n              className: \"action-btn download-btn\",\n              children: \"\\uD83D\\uDCE5 T\\xE9l\\xE9charger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleShare,\n              className: \"action-btn share-btn\",\n              children: \"\\uD83D\\uDCE4 Partager\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: resetForm,\n              className: \"action-btn reset-btn\",\n              children: \"\\uD83D\\uDD04 Nouveau\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n};\n_s(MemeGenerator, \"j5ehuBPg5H0X8M2C5+04X0ILaGM=\");\n_c = MemeGenerator;\nexport default MemeGenerator;\nvar _c;\n$RefreshReg$(_c, \"MemeGenerator\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","html2canvas","toast","jsxDEV","_jsxDEV","MemeGenerator","_s","selectedImage","setSelectedImage","imageUrl","setImageUrl","cloudinaryId","setCloudinaryId","topText","setTopText","bottomText","setBottomText","title","setTitle","isUploading","setIsUploading","isSaving","setIsSaving","memeRef","handleImageUpload","event","file","target","files","size","error","generateMemeImage","imageFile","Promise","resolve","reject","img","Image","onload","canvas","document","createElement","ctx","getContext","width","height","drawImage","font","Math","floor","fillStyle","strokeStyle","lineWidth","textAlign","textBaseline","strokeText","fillText","textY","textHeight","fillRect","toBlob","blob","Error","onerror","src","URL","createObjectURL","generateFinalMemeAndUpload","current","formData","FormData","append","response","post","headers","data","success","console","handleSaveMeme","trim","memeData","resetForm","handleDownload","backgroundColor","scale","link","download","href","toDataURL","click","handleShare","navigator","share","text","url","log","clipboard","writeText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","id","htmlFor","placeholder","value","e","ref","alt","style","maxWidth","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/AZIZ/Desktop/gen_meme/client/src/components/MemeGenerator.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport html2canvas from 'html2canvas';\r\nimport toast from 'react-hot-toast';\r\nimport './component.css';\r\n\r\nconst MemeGenerator = () => {\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const [imageUrl, setImageUrl] = useState('');\r\n  const [cloudinaryId, setCloudinaryId] = useState('');\r\n  const [topText, setTopText] = useState('');\r\n  const [bottomText, setBottomText] = useState('');\r\n  const [title, setTitle] = useState('');\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const memeRef = useRef(null);\r\n\r\n  const handleImageUpload = async (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    if (file.size > 5 * 1024 * 1024) {\r\n      toast.error('Le fichier est trop volumineux (max 5MB)');\r\n      return;\r\n    }\r\n    // CrÃ©ez une URL pour l'aperÃ§u\r\n    // const imageUrl = URL.createObjectURL(file);\r\n    setSelectedImage(file);\r\n    if (file){\r\n        setIsUploading(true);\r\n    }\r\n  };\r\n\r\n//   useEffect(() => {\r\n//     return () => {\r\n//       if (selectedImage?.preview) {\r\n//         URL.revokeObjectURL(selectedImage.preview);\r\n//       }\r\n//     };\r\n//   }, [selectedImage]);\r\n\r\nconst generateMemeImage = async (imageFile, topText, bottomText) => {\r\n    return new Promise((resolve, reject) => {\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        const canvas = document.createElement(\"canvas\");\r\n        const ctx = canvas.getContext(\"2d\");\r\n  \r\n        canvas.width = img.width;\r\n        canvas.height = img.height;\r\n  \r\n        // Dessiner l'image de base\r\n        ctx.drawImage(img, 0, 0);\r\n  \r\n        // Style texte commun\r\n        ctx.font = `bold ${Math.floor(canvas.width / 10)}px Impact`;\r\n        ctx.fillStyle = \"white\";\r\n        ctx.strokeStyle = \"black\";\r\n        ctx.lineWidth = 6;\r\n        ctx.textAlign = \"center\";\r\n  \r\n        // Dessiner le texte du haut\r\n        ctx.textBaseline = \"top\";\r\n        ctx.strokeText(topText, canvas.width / 2, 20);\r\n        ctx.fillText(topText, canvas.width / 2, 20);\r\n  \r\n        // Dessiner le texte du bas (avec fond noir)\r\n        const textY = canvas.height / 2;\r\n        const textHeight = Math.floor(canvas.width / 10) + 20;\r\n  \r\n        // fond noir rectangulaire\r\n        ctx.fillStyle = \"black\";\r\n        ctx.fillRect(0, textY - 10, canvas.width, textHeight);\r\n  \r\n        // texte blanc par-dessus\r\n        ctx.fillStyle = \"white\";\r\n        ctx.textBaseline = \"top\";\r\n        ctx.fillText(bottomText, canvas.width / 2, textY);\r\n  \r\n        canvas.toBlob((blob) => {\r\n          if (blob) resolve(blob);\r\n          else reject(new Error(\"Ã‰chec gÃ©nÃ©ration mÃ¨me\"));\r\n        }, \"image/png\");\r\n      };\r\n  \r\n      img.onerror = reject;\r\n      img.src = URL.createObjectURL(imageFile);\r\n    });\r\n  };\r\n  \r\n  const generateFinalMemeAndUpload = async () => {\r\n    if (!memeRef.current) return;\r\n  \r\n    setIsUploading(true);\r\n    try {\r\n    const blob = await generateMemeImage(selectedImage, \"TOP TEXT\", \"BOTTOM TEXT\");\r\n  \r\n      const formData = new FormData();\r\n      formData.append('image', blob, 'meme.png');\r\n  \r\n      const response = await axios.post(\"http://localhost:5000/api/upload\", formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n  \r\n      setImageUrl(response.data.imageUrl);\r\n      setCloudinaryId(response.data.cloudinaryId);\r\n      toast.success('MÃ¨me gÃ©nÃ©rÃ© et uploadÃ©!');\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Erreur lors de la gÃ©nÃ©ration:', error);\r\n      toast.error('Erreur pendant le rendu du mÃ¨me');\r\n      return false;\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n  \r\n  const handleSaveMeme = async () => {\r\n    if (!title.trim()) {\r\n      toast.error('Veuillez ajouter un titre');\r\n      return;\r\n    }\r\n    const success = await generateFinalMemeAndUpload();\r\n    if (!success || !imageUrl) {\r\n      toast.error(\"L'image avec le texte n'a pas pu Ãªtre gÃ©nÃ©rÃ©e.\");\r\n      return;\r\n    }\r\n    setIsSaving(true);\r\n    try {\r\n      const memeData = {\r\n        title: title.trim(),\r\n        imageUrl,\r\n        cloudinaryId,\r\n      };\r\n      await axios.post('http://localhost:5000/api/memes', memeData);\r\n      toast.success('MÃ¨me sauvegardÃ© avec succÃ¨s!');\r\n      resetForm();\r\n    } catch (error) {\r\n      console.error('Erreur sauvegarde:', error);\r\n      toast.error('Erreur lors de la sauvegarde');\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n  \r\n  const handleDownload = async () => {\r\n    if (!memeRef.current) return;\r\n\r\n    try {\r\n      const canvas = await html2canvas(memeRef.current, {\r\n        backgroundColor: null,\r\n        scale: 2,\r\n      });\r\n\r\n      const link = document.createElement('a');\r\n      link.download = `${title || 'meme'}.png`;\r\n      link.href = canvas.toDataURL();\r\n      link.click();\r\n      \r\n      toast.success('MÃ¨me tÃ©lÃ©chargÃ©!');\r\n    } catch (error) {\r\n      console.error('Erreur tÃ©lÃ©chargement:', error);\r\n      toast.error('Erreur lors du tÃ©lÃ©chargement');\r\n    }\r\n  };\r\n\r\n  const handleShare = async () => {\r\n    if (navigator.share && imageUrl) {\r\n      try {\r\n        await navigator.share({\r\n          title: `MÃ¨me: ${title}`,\r\n          text: `Regardez ce mÃ¨me que j'ai crÃ©Ã©: ${title}`,\r\n          url: imageUrl,\r\n        });\r\n      } catch (error) {\r\n        console.log('Partage annulÃ©');\r\n      }\r\n    } else {\r\n      // Fallback: copier l'URL\r\n      if (imageUrl) {\r\n        navigator.clipboard.writeText(imageUrl);\r\n        toast.success('URL copiÃ©e dans le presse-papier!');\r\n      }\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setSelectedImage(null);\r\n    setImageUrl('');\r\n    setCloudinaryId('');\r\n    setTopText('');\r\n    setBottomText('');\r\n    setTitle('');\r\n  };\r\n\r\n  console.log(selectedImage);\r\n  \r\n\r\n  return (\r\n    <div className=\"meme-generator\">\r\n      <div className=\"generator-container\">\r\n        <h1>CrÃ©ateur de MÃ¨mes</h1>\r\n        <div className=\"generator-content\">\r\n\r\n          {/* Section Upload */}\r\n          <div className=\"upload-section\">\r\n            <h2>1. Choisir une image</h2>\r\n            <div className=\"upload-area\">\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={handleImageUpload}\r\n                className=\"file-input\"\r\n                id=\"image-upload\"\r\n              />\r\n              <label htmlFor=\"image-upload\" className=\"upload-label\">\r\n                {isUploading ? 'Upload en cours...' : 'ðŸ“¤ Choisir une image'}\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Section Texte */}\r\n          {selectedImage && (\r\n            <div className=\"text-section\">\r\n              <h2>2. Ajouter du texte</h2>\r\n              <div className=\"input-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Titre du mÃ¨me\"\r\n                  value={title}\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                  className=\"text-input\"\r\n                />\r\n              </div>\r\n              <div className=\"input-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Texte du haut\"\r\n                  value={topText}\r\n                  onChange={(e) => setTopText(e.target.value)}\r\n                  className=\"text-input\"\r\n                />\r\n              </div>\r\n              <div className=\"input-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Texte du bas\"\r\n                  value={bottomText}\r\n                  onChange={(e) => setBottomText(e.target.value)}\r\n                  className=\"text-input\"\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* AperÃ§u */}\r\n          {selectedImage && (\r\n            <div className=\"preview-section\">\r\n              <h2>3. AperÃ§u</h2>\r\n              <div className=\"meme-preview\" ref={memeRef}>\r\n                <div className=\"meme-container\">\r\n                {selectedImage && (\r\n                <img src={URL.createObjectURL(selectedImage)} alt=\"preview\" style={{ maxWidth: \"400px\" }} />\r\n                )}\r\n                  {topText && (\r\n                    <div className=\"meme-text meme-text-top\">\r\n                      {topText}\r\n                    </div>\r\n                  )}\r\n                  {bottomText && (\r\n                    <div className=\"meme-text meme-text-bottom\">\r\n                      {bottomText}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Actions */}\r\n              <div className=\"actions\">\r\n                <button\r\n                  onClick={handleSaveMeme}\r\n                  disabled={isSaving}\r\n                  className=\"action-btn save-btn\"\r\n                >\r\n                  {isSaving ? 'Sauvegarde...' : 'ðŸ’¾ Sauvegarder'}\r\n                </button>\r\n                <button\r\n                  onClick={handleDownload}\r\n                  className=\"action-btn download-btn\"\r\n                >\r\n                  ðŸ“¥ TÃ©lÃ©charger\r\n                </button>\r\n                <button\r\n                  onClick={handleShare}\r\n                  className=\"action-btn share-btn\"\r\n                >\r\n                  ðŸ“¤ Partager\r\n                </button>\r\n                <button\r\n                  onClick={resetForm}\r\n                  className=\"action-btn reset-btn\"\r\n                >\r\n                  ðŸ”„ Nouveau\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MemeGenerator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}