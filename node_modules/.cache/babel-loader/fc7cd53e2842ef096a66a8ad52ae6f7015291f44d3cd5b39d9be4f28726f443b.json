{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AZIZ\\\\Desktop\\\\gen_meme\\\\client\\\\src\\\\components\\\\MemeGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport html2canvas from 'html2canvas';\nimport toast from 'react-hot-toast';\nimport './component.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MemeGenerator = () => {\n  _s();\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [imageUrl, setImageUrl] = useState('');\n  const [cloudinaryId, setCloudinaryId] = useState('');\n  const [topText, setTopText] = useState('');\n  const [bottomText, setBottomText] = useState('');\n  const [title, setTitle] = useState('');\n  const [isUploading, setIsUploading] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [preview, setPreview] = useState(null);\n  const memeRef = useRef(null);\n  const handleImageUpload = async event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    if (file.size > 5 * 1024 * 1024) {\n      toast.error('Le fichier est trop volumineux (max 5MB)');\n      return;\n    }\n    setSelectedImage(file);\n    setPreview(URL.createObjectURL(file));\n    if (file) {\n      setIsUploading(true);\n    }\n  };\n  const generateMemeImage = async (imageFile, topText, bottomText) => {\n    return new Promise((resolve, reject) => {\n      const img = new Image();\n      img.onload = () => {\n        const canvas = document.createElement(\"canvas\");\n        const ctx = canvas.getContext(\"2d\");\n        canvas.width = img.width;\n        canvas.height = img.height;\n\n        // Dessiner l'image de base\n        ctx.drawImage(img, 0, 0);\n\n        // TOP TEXT\n        const topFontSize = Math.floor(canvas.width / 10);\n        ctx.font = `bold ${topFontSize}px Impact`;\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"top\";\n        ctx.fillStyle = \"white\";\n        ctx.strokeStyle = \"black\";\n        ctx.lineWidth = 6;\n        ctx.strokeText(topText, canvas.width / 2, 20);\n        ctx.fillText(topText, canvas.width / 2, 20);\n\n        // BOTTOM TEXT avec fond noir\n        const bottomFontSize = topFontSize;\n        const bottomTextY = canvas.height / 1.5;\n        const textHeight = bottomFontSize + 20;\n        ctx.fillStyle = \"black\";\n        ctx.fillRect(0, bottomTextY - 10, canvas.width, textHeight);\n        ctx.font = `bold ${bottomFontSize}px Impact`;\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"top\";\n        ctx.fillStyle = \"white\";\n        ctx.strokeStyle = \"black\";\n        ctx.lineWidth = 3;\n        ctx.strokeText(bottomText, canvas.width / 2, bottomTextY);\n        ctx.fillText(bottomText, canvas.width / 2, bottomTextY);\n\n        // Preview mise Ã  jour ici\n        const dataURL = canvas.toDataURL(\"image/png\");\n        setPreview(dataURL); // pour affichage live\n        console.log(\"kd\", dataURL);\n        canvas.toBlob(blob => {\n          if (blob) resolve(blob);else reject(new Error(\"Ã‰chec gÃ©nÃ©ration meme\"));\n        }, \"image/png\");\n      };\n      img.onerror = reject;\n      img.src = URL.createObjectURL(imageFile);\n      console.log(img.src);\n      //   setPreview(img.src);\n      setSelectedImage(imageFile);\n    });\n  };\n  const handlechangetop = async event => {\n    top = event.target.value;\n    setTopText(top);\n  };\n  const handlechangebot = async event => {\n    bot = event.target.value;\n    setBottomText(bot);\n  };\n  const synchimg = async () => {\n    generateMemeImage(selectedImage, topText, bottomText).then(blob => {\n      const url = URL.createObjectURL(blob);\n      setPreview(url);\n    });\n  };\n  useEffect(() => {\n    if (selectedImage && topText && bottomText) {\n      generateMemeImage(selectedImage, topText, bottomText).then(blob => {\n        const url = URL.createObjectURL(blob);\n        setPreview(url);\n      });\n    }\n  }, [selectedImage, topText, bottomText]);\n  const generateFinalMemeAndUpload = async () => {\n    if (!memeRef.current) return;\n    setIsUploading(true);\n    try {\n      const blob = await generateMemeImage(selectedImage, topText, bottomText);\n      const formData = new FormData();\n      formData.append('image', blob, 'meme.png');\n      const response = await axios.post(\"http://localhost:5000/api/upload\", formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setImageUrl(response.data.imageUrl);\n      setCloudinaryId(response.data.cloudinaryId);\n      toast.success('meme gÃ©nÃ©rÃ© et uploadÃ©!');\n      return true;\n    } catch (error) {\n      console.error('Erreur lors de la gÃ©nÃ©ration:', error);\n      toast.error('Erreur pendant le rendu du meme');\n      return false;\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  const handleSaveMeme = async () => {\n    if (!title.trim()) {\n      toast.error('Veuillez ajouter un titre');\n      return;\n    }\n    const success = await generateFinalMemeAndUpload();\n    if (!success || !imageUrl) {\n      toast.error(\"L'image avec le texte n'a pas pu Ãªtre gÃ©nÃ©rÃ©e.\");\n      return;\n    }\n    setIsSaving(true);\n    try {\n      const memeData = {\n        title: title.trim(),\n        imageUrl,\n        cloudinaryId\n      };\n      await axios.post('http://localhost:5000/api/memes', memeData);\n      toast.success('meme sauvegardÃ© avec succÃ¨s!');\n      resetForm();\n    } catch (error) {\n      console.error('Erreur sauvegarde:', error);\n      toast.error('Erreur lors de la sauvegarde');\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  const handleDownload = async () => {\n    if (!memeRef.current) return;\n    try {\n      const canvas = await html2canvas(memeRef.current, {\n        backgroundColor: null,\n        scale: 2\n      });\n      const link = document.createElement('a');\n      link.download = `${title || 'meme'}.png`;\n      link.href = canvas.toDataURL();\n      link.click();\n      toast.success('meme tÃ©lÃ©chargÃ©!');\n    } catch (error) {\n      console.error('Erreur tÃ©lÃ©chargement:', error);\n      toast.error('Erreur lors du tÃ©lÃ©chargement');\n    }\n  };\n  const resetForm = () => {\n    setSelectedImage(null);\n    setImageUrl('');\n    setCloudinaryId('');\n    setTopText('');\n    setBottomText('');\n    setTitle('');\n  };\n  const handleShare = async () => {\n    if (!preview) return;\n    try {\n      const response = await fetch(preview);\n      const blob = await response.blob();\n      const file = new File([blob], 'meme.png', {\n        type: blob.type\n      });\n      if (navigator.canShare && navigator.canShare({\n        files: [file]\n      })) {\n        await navigator.share({\n          title: `meme: ${title}`,\n          text: `Regardez ce meme que j'ai crÃ©Ã© : ${title}`,\n          files: [file]\n        });\n      } else {\n        navigator.clipboard.writeText(preview);\n        toast.success('URL copiÃ©e dans le presse-papier (partage direct non supportÃ©)');\n      }\n    } catch (error) {\n      console.error(\"Erreur lors du partage:\", error);\n      toast.error(\"Partage impossible.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"meme-generator px-4 py-8 max-w-4xl mx-auto text-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold mb-8 text-center\",\n      children: \"\\uD83C\\uDFA8 Cr\\xE9ateur de Memes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white/10 backdrop-blur-lg rounded-2xl p-6 shadow-2xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold mb-4\",\n        children: \"1. Choisir une image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image-upload\",\n          className: \"cursor-pointer block w-full text-center py-4 border-2 border-dashed border-white/50 rounded-xl hover:bg-white/10 transition\",\n          children: isUploading ? \"ðŸ“¤ Upload en cours...\" : \"ðŸ“¸ Cliquez pour sÃ©lectionner une image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"image-upload\",\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: handleImageUpload,\n          className: \"hidden\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 13\n      }, this), selectedImage && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold mb-4\",\n          children: \"2. Ajouter du texte\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 sm:grid-cols-2 gap-4 mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Titre du meme\",\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            className: \"bg-white/20 border border-white/30 text-white px-4 py-2 rounded-lg placeholder-white sm:col-span-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Texte du haut\",\n            onChange: handlechangetop,\n            className: \"bg-white/20 border border-white/30 text-white px-4 py-2 rounded-lg placeholder-white \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Texte du bas\",\n            onChange: handlechangebot,\n            className: \"bg-white/20 border border-white/30 text-white px-4 py-2 rounded-lg placeholder-white \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true), selectedImage && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold mb-4\",\n          children: \"3. Aper\\xE7u\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative bg-white rounded-xl overflow-hidden shadow-xl p-4 max-w-md mx-auto mb-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: preview,\n              alt: \"preview\",\n              className: \"w-full rounded-md\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap gap-4 justify-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSaveMeme,\n            disabled: isSaving,\n            className: \"action-btn save-btn\",\n            children: isSaving ? 'ðŸ’¾ Sauvegarde...' : 'ðŸ’¾ Sauvegarder'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDownload,\n            className: \"action-btn download-btn\",\n            children: \"\\uD83D\\uDCE5 T\\xE9l\\xE9charger\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleShare,\n            className: \"action-btn share-btn\",\n            children: \"\\uD83D\\uDCE4 Partager\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetForm,\n            className: \"action-btn reset-btn\",\n            children: \"\\uD83D\\uDD04 Nouveau\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 9\n  }, this);\n};\n_s(MemeGenerator, \"l+Yjq1I6GMTfa2HkBhbRLj8VqHs=\");\n_c = MemeGenerator;\nexport default MemeGenerator;\nvar _c;\n$RefreshReg$(_c, \"MemeGenerator\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","html2canvas","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","MemeGenerator","_s","selectedImage","setSelectedImage","imageUrl","setImageUrl","cloudinaryId","setCloudinaryId","topText","setTopText","bottomText","setBottomText","title","setTitle","isUploading","setIsUploading","isSaving","setIsSaving","preview","setPreview","memeRef","handleImageUpload","event","file","target","files","size","error","URL","createObjectURL","generateMemeImage","imageFile","Promise","resolve","reject","img","Image","onload","canvas","document","createElement","ctx","getContext","width","height","drawImage","topFontSize","Math","floor","font","textAlign","textBaseline","fillStyle","strokeStyle","lineWidth","strokeText","fillText","bottomFontSize","bottomTextY","textHeight","fillRect","dataURL","toDataURL","console","log","toBlob","blob","Error","onerror","src","handlechangetop","top","value","handlechangebot","bot","synchimg","then","url","generateFinalMemeAndUpload","current","formData","FormData","append","response","post","headers","data","success","handleSaveMeme","trim","memeData","resetForm","handleDownload","backgroundColor","scale","link","download","href","click","handleShare","fetch","File","type","navigator","canShare","share","text","clipboard","writeText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","accept","onChange","placeholder","e","alt","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/AZIZ/Desktop/gen_meme/client/src/components/MemeGenerator.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport html2canvas from 'html2canvas';\r\nimport toast from 'react-hot-toast';\r\nimport './component.css';\r\n\r\nconst MemeGenerator = () => {\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const [imageUrl, setImageUrl] = useState('');\r\n  const [cloudinaryId, setCloudinaryId] = useState('');\r\n  const [topText, setTopText] = useState('');\r\n  const [bottomText, setBottomText] = useState('');\r\n  const [title, setTitle] = useState('');\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [preview, setPreview] = useState(null)\r\n  const memeRef = useRef(null);\r\n\r\n  const handleImageUpload = async (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    if (file.size > 5 * 1024 * 1024) {\r\n      toast.error('Le fichier est trop volumineux (max 5MB)');\r\n      return;\r\n    }\r\n\r\n    setSelectedImage(file);\r\n    setPreview( URL.createObjectURL(file))\r\n    if (file){\r\n        setIsUploading(true);\r\n    }\r\n  };\r\n  \r\n  const generateMemeImage = async (imageFile, topText, bottomText) => {\r\n    return new Promise((resolve, reject) => {\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        const canvas = document.createElement(\"canvas\");\r\n        const ctx = canvas.getContext(\"2d\");\r\n  \r\n        canvas.width = img.width;\r\n        canvas.height = img.height;\r\n  \r\n        // Dessiner l'image de base\r\n        ctx.drawImage(img, 0, 0);\r\n  \r\n        // TOP TEXT\r\n        const topFontSize = Math.floor(canvas.width / 10);\r\n        ctx.font = `bold ${topFontSize}px Impact`;\r\n        ctx.textAlign = \"center\";\r\n        ctx.textBaseline = \"top\";\r\n        ctx.fillStyle = \"white\";\r\n        ctx.strokeStyle = \"black\";\r\n        ctx.lineWidth = 6;\r\n  \r\n        ctx.strokeText(topText, canvas.width / 2, 20);\r\n        ctx.fillText(topText, canvas.width / 2, 20);\r\n  \r\n        // BOTTOM TEXT avec fond noir\r\n        const bottomFontSize = topFontSize;\r\n        const bottomTextY = canvas.height / 1.5;\r\n        const textHeight = bottomFontSize + 20;\r\n  \r\n        ctx.fillStyle = \"black\";\r\n        ctx.fillRect(0, bottomTextY - 10, canvas.width, textHeight);\r\n  \r\n        ctx.font = `bold ${bottomFontSize}px Impact`;\r\n        ctx.textAlign = \"center\";\r\n        ctx.textBaseline = \"top\";\r\n        ctx.fillStyle = \"white\";\r\n        ctx.strokeStyle = \"black\";\r\n        ctx.lineWidth = 3;\r\n  \r\n        ctx.strokeText(bottomText, canvas.width / 2, bottomTextY);\r\n        ctx.fillText(bottomText, canvas.width / 2, bottomTextY);\r\n  \r\n        // Preview mise Ã  jour ici\r\n        const dataURL = canvas.toDataURL(\"image/png\");\r\n        setPreview(dataURL); // pour affichage live\r\n        console.log(\"kd\", dataURL);\r\n        \r\n  \r\n        canvas.toBlob((blob) => {\r\n          if (blob) resolve(blob);\r\n          else reject(new Error(\"Ã‰chec gÃ©nÃ©ration meme\"));\r\n        }, \"image/png\");\r\n      };\r\n  \r\n      img.onerror = reject;\r\n      img.src = URL.createObjectURL(imageFile);\r\n      console.log(img.src);\r\n    //   setPreview(img.src);\r\n      setSelectedImage(imageFile)\r\n      \r\n    });\r\n  };\r\n\r\n\r\n  const handlechangetop = async(event)=> {\r\n    top =  event.target.value;\r\n    setTopText(top);\r\n\r\n  };\r\n  \r\n  const handlechangebot = async(event)=> {\r\n    bot =  event.target.value;\r\n    setBottomText(bot);\r\n  }\r\n\r\n  const synchimg = async() => {\r\n    generateMemeImage(selectedImage, topText, bottomText)\r\n    .then(blob => {\r\n      const url = URL.createObjectURL(blob);\r\n      setPreview(url);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (selectedImage && topText && bottomText) {\r\n      generateMemeImage(selectedImage, topText, bottomText)\r\n        .then(blob => {\r\n          const url = URL.createObjectURL(blob);\r\n          setPreview(url);\r\n        });\r\n    }\r\n  }, [selectedImage, topText, bottomText]); \r\n\r\nconst generateFinalMemeAndUpload = async () => {\r\n    if (!memeRef.current) return;\r\n  \r\n    setIsUploading(true);\r\n    try {\r\n    const blob = await generateMemeImage(selectedImage, topText, bottomText);\r\n  \r\n      const formData = new FormData();\r\n      formData.append('image', blob, 'meme.png');\r\n  \r\n      const response = await axios.post(\"http://localhost:5000/api/upload\", formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n  \r\n      setImageUrl(response.data.imageUrl);\r\n      setCloudinaryId(response.data.cloudinaryId);\r\n      toast.success('meme gÃ©nÃ©rÃ© et uploadÃ©!');\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Erreur lors de la gÃ©nÃ©ration:', error);\r\n      toast.error('Erreur pendant le rendu du meme');\r\n      return false;\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n  \r\nconst handleSaveMeme = async () => {\r\n    if (!title.trim()) {\r\n      toast.error('Veuillez ajouter un titre');\r\n      return;\r\n    }\r\n    const success = await generateFinalMemeAndUpload();\r\n    if (!success || !imageUrl) {\r\n      toast.error(\"L'image avec le texte n'a pas pu Ãªtre gÃ©nÃ©rÃ©e.\");\r\n      return;\r\n    }\r\n    setIsSaving(true);\r\n    try {\r\n      const memeData = {\r\n        title: title.trim(),\r\n        imageUrl,\r\n        cloudinaryId,\r\n      };\r\n      await axios.post('http://localhost:5000/api/memes', memeData);\r\n      toast.success('meme sauvegardÃ© avec succÃ¨s!');\r\n      resetForm();\r\n    } catch (error) {\r\n      console.error('Erreur sauvegarde:', error);\r\n      toast.error('Erreur lors de la sauvegarde');\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n  \r\nconst handleDownload = async () => {\r\n    if (!memeRef.current) return;\r\n\r\n    try {\r\n      const canvas = await html2canvas(memeRef.current, {\r\n        backgroundColor: null,\r\n        scale: 2,\r\n      });\r\n\r\n      const link = document.createElement('a');\r\n      link.download = `${title || 'meme'}.png`;\r\n      link.href = canvas.toDataURL();\r\n      link.click();\r\n      \r\n      toast.success('meme tÃ©lÃ©chargÃ©!');\r\n    } catch (error) {\r\n      console.error('Erreur tÃ©lÃ©chargement:', error);\r\n      toast.error('Erreur lors du tÃ©lÃ©chargement');\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setSelectedImage(null);\r\n    setImageUrl('');\r\n    setCloudinaryId('');\r\n    setTopText('');\r\n    setBottomText('');\r\n    setTitle('');\r\n  };\r\n\r\n  const handleShare = async () => {\r\n    if (!preview) return;\r\n  \r\n    try {\r\n      const response = await fetch(preview);\r\n      const blob = await response.blob();\r\n      const file = new File([blob], 'meme.png', { type: blob.type });\r\n  \r\n      if (navigator.canShare && navigator.canShare({ files: [file] })) {\r\n        await navigator.share({\r\n          title: `meme: ${title}`,\r\n          text: `Regardez ce meme que j'ai crÃ©Ã© : ${title}`,\r\n          files: [file],\r\n        });\r\n      } else {\r\n        navigator.clipboard.writeText(preview);\r\n        toast.success('URL copiÃ©e dans le presse-papier (partage direct non supportÃ©)');\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erreur lors du partage:\", error);\r\n      toast.error(\"Partage impossible.\");\r\n    }\r\n  };\r\n  \r\n\r\n    return (\r\n        <div className=\"meme-generator px-4 py-8 max-w-4xl mx-auto text-white\">\r\n          <h1 className=\"text-4xl font-bold mb-8 text-center\">ðŸŽ¨ CrÃ©ateur de Memes</h1>\r\n      \r\n          <div className=\"bg-white/10 backdrop-blur-lg rounded-2xl p-6 shadow-2xl\">\r\n            {/* Section Upload */}\r\n            <h2 className=\"text-2xl font-semibold mb-4\">1. Choisir une image</h2>\r\n            <div className=\"mb-6\">\r\n              <label htmlFor=\"image-upload\" className=\"cursor-pointer block w-full text-center py-4 border-2 border-dashed border-white/50 rounded-xl hover:bg-white/10 transition\">\r\n                {isUploading ? \"ðŸ“¤ Upload en cours...\" : \"ðŸ“¸ Cliquez pour sÃ©lectionner une image\"}\r\n              </label>\r\n              <input\r\n                id=\"image-upload\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={handleImageUpload}\r\n                className=\"hidden\"\r\n              />\r\n            </div>\r\n      \r\n            {/* Section Texte */}\r\n            {selectedImage && (\r\n              <>\r\n                <h2 className=\"text-2xl font-semibold mb-4\">2. Ajouter du texte</h2>\r\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4 mb-6\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Titre du meme\"\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                    className=\"bg-white/20 border border-white/30 text-white px-4 py-2 rounded-lg placeholder-white sm:col-span-2\"\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Texte du haut\"\r\n                    \r\n                    onChange={handlechangetop}\r\n                    className=\"bg-white/20 border border-white/30 text-white px-4 py-2 rounded-lg placeholder-white \"\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Texte du bas\"\r\n                    \r\n                    onChange={handlechangebot}\r\n                    className=\"bg-white/20 border border-white/30 text-white px-4 py-2 rounded-lg placeholder-white \"\r\n                  />\r\n                </div>\r\n              </>\r\n            )}\r\n      \r\n            {/* AperÃ§u */}\r\n            {selectedImage && (\r\n              <>\r\n                <h2 className=\"text-2xl font-semibold mb-4\">3. AperÃ§u</h2>\r\n                <div className=\"relative bg-white rounded-xl overflow-hidden shadow-xl p-4 max-w-md mx-auto mb-6\">\r\n                  <div className=\"relative\">\r\n                    <img src={preview} alt=\"preview\" className=\"w-full rounded-md\" />\r\n                  </div>\r\n                </div>\r\n      \r\n                {/* Actions */}\r\n                <div className=\"flex flex-wrap gap-4 justify-center\">\r\n                  <button onClick={handleSaveMeme} disabled={isSaving} className=\"action-btn save-btn\">\r\n                    {isSaving ? 'ðŸ’¾ Sauvegarde...' : 'ðŸ’¾ Sauvegarder'}\r\n                  </button>\r\n                  <button onClick={handleDownload} className=\"action-btn download-btn\">\r\n                    ðŸ“¥ TÃ©lÃ©charger\r\n                  </button>\r\n                  <button onClick={handleShare} className=\"action-btn share-btn\">\r\n                    ðŸ“¤ Partager\r\n                  </button>\r\n                  <button onClick={resetForm} className=\"action-btn reset-btn\">\r\n                    ðŸ”„ Nouveau\r\n                  </button>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      );\r\n\r\n    }\r\nexport default MemeGenerator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}