{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AZIZ\\\\Desktop\\\\gen_meme\\\\client\\\\src\\\\components\\\\MemeGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport html2canvas from 'html2canvas';\nimport toast from 'react-hot-toast';\nimport './component.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MemeGenerator = () => {\n  _s();\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [imageUrl, setImageUrl] = useState('');\n  const [cloudinaryId, setCloudinaryId] = useState('');\n  const [topText, setTopText] = useState('');\n  const [bottomText, setBottomText] = useState('');\n  const [title, setTitle] = useState('');\n  const [isUploading, setIsUploading] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [preview, setPreview] = useState(null);\n  const memeRef = useRef(null);\n  const handleImageUpload = async event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    if (file.size > 5 * 1024 * 1024) {\n      toast.error('Le fichier est trop volumineux (max 5MB)');\n      return;\n    }\n    setSelectedImage(file);\n    setPreview(URL.createObjectURL(file));\n    if (file) {\n      setIsUploading(true);\n    }\n  };\n  const generateMemeImage = async (imageFile, topText, bottomText) => {\n    return new Promise((resolve, reject) => {\n      const img = new Image();\n      img.onload = () => {\n        const canvas = document.createElement(\"canvas\");\n        const ctx = canvas.getContext(\"2d\");\n        canvas.width = img.width;\n        canvas.height = img.height;\n\n        // Dessiner l'image de base\n        ctx.drawImage(img, 0, 0);\n\n        // TOP TEXT\n        const topFontSize = Math.floor(canvas.width / 10);\n        ctx.font = `bold ${topFontSize}px Impact`;\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"top\";\n        ctx.fillStyle = \"white\";\n        ctx.strokeStyle = \"black\";\n        ctx.lineWidth = 6;\n        ctx.strokeText(topText, canvas.width / 2, 20);\n        ctx.fillText(topText, canvas.width / 2, 20);\n\n        // BOTTOM TEXT avec fond noir\n        const bottomFontSize = topFontSize;\n        const bottomTextY = canvas.height / 2;\n        const textHeight = bottomFontSize + 20;\n        ctx.fillStyle = \"black\";\n        ctx.fillRect(0, bottomTextY - 10, canvas.width, textHeight);\n        ctx.font = `bold ${bottomFontSize}px Impact`;\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"top\";\n        ctx.fillStyle = \"white\";\n        ctx.strokeStyle = \"black\";\n        ctx.lineWidth = 3;\n        ctx.strokeText(bottomText, canvas.width / 2, bottomTextY);\n        ctx.fillText(bottomText, canvas.width / 2, bottomTextY);\n\n        // Preview mise Ã  jour ici\n        const dataURL = canvas.toDataURL(\"image/png\");\n        setPreview(dataURL); // pour affichage live\n\n        canvas.toBlob(blob => {\n          if (blob) resolve(blob);else reject(new Error(\"Ã‰chec gÃ©nÃ©ration mÃ¨me\"));\n        }, \"image/png\");\n      };\n      img.onerror = reject;\n      img.src = URL.createObjectURL(imageFile);\n      console.log(img.src);\n    });\n  };\n  const generateFinalMemeAndUpload = async () => {\n    if (!memeRef.current) return;\n    setIsUploading(true);\n    try {\n      const blob = await generateMemeImage(selectedImage, topText, bottomText);\n      const formData = new FormData();\n      formData.append('image', blob, 'meme.png');\n      const response = await axios.post(\"http://localhost:5000/api/upload\", formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setImageUrl(response.data.imageUrl);\n      setCloudinaryId(response.data.cloudinaryId);\n      toast.success('MÃ¨me gÃ©nÃ©rÃ© et uploadÃ©!');\n      return true;\n    } catch (error) {\n      console.error('Erreur lors de la gÃ©nÃ©ration:', error);\n      toast.error('Erreur pendant le rendu du mÃ¨me');\n      return false;\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  const handleSaveMeme = async () => {\n    if (!title.trim()) {\n      toast.error('Veuillez ajouter un titre');\n      return;\n    }\n    const success = await generateFinalMemeAndUpload();\n    if (!success || !imageUrl) {\n      toast.error(\"L'image avec le texte n'a pas pu Ãªtre gÃ©nÃ©rÃ©e.\");\n      return;\n    }\n    setIsSaving(true);\n    try {\n      const memeData = {\n        title: title.trim(),\n        imageUrl,\n        cloudinaryId\n      };\n      await axios.post('http://localhost:5000/api/memes', memeData);\n      toast.success('MÃ¨me sauvegardÃ© avec succÃ¨s!');\n      resetForm();\n    } catch (error) {\n      console.error('Erreur sauvegarde:', error);\n      toast.error('Erreur lors de la sauvegarde');\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  const handleDownload = async () => {\n    if (!memeRef.current) return;\n    try {\n      const canvas = await html2canvas(memeRef.current, {\n        backgroundColor: null,\n        scale: 2\n      });\n      const link = document.createElement('a');\n      link.download = `${title || 'meme'}.png`;\n      link.href = canvas.toDataURL();\n      link.click();\n      toast.success('MÃ¨me tÃ©lÃ©chargÃ©!');\n    } catch (error) {\n      console.error('Erreur tÃ©lÃ©chargement:', error);\n      toast.error('Erreur lors du tÃ©lÃ©chargement');\n    }\n  };\n  const handleShare = async () => {\n    if (navigator.share && imageUrl) {\n      try {\n        await navigator.share({\n          title: `MÃ¨me: ${title}`,\n          text: `Regardez ce mÃ¨me que j'ai crÃ©Ã©: ${title}`,\n          url: imageUrl\n        });\n      } catch (error) {\n        console.log('Partage annulÃ©');\n      }\n    } else {\n      // Fallback: copier l'URL\n      if (imageUrl) {\n        navigator.clipboard.writeText(imageUrl);\n        toast.success('URL copiÃ©e dans le presse-papier!');\n      }\n    }\n  };\n  const resetForm = () => {\n    setSelectedImage(null);\n    setImageUrl('');\n    setCloudinaryId('');\n    setTopText('');\n    setBottomText('');\n    setTitle('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"meme-generator\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"generator-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Cr\\xE9ateur de M\\xE8mes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generator-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"1. Choisir une image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-area\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              onChange: handleImageUpload,\n              className: \"file-input\",\n              id: \"image-upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"image-upload\",\n              className: \"upload-label\",\n              children: isUploading ? 'Upload en cours...' : 'ðŸ“¤ Choisir une image'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), selectedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"2. Ajouter du texte\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Titre du m\\xE8me\",\n              value: title,\n              onChange: e => setTitle(e.target.value),\n              className: \"text-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Texte du haut\",\n              value: topText,\n              onChange: e => setTopText(e.target.value),\n              className: \"text-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Texte du bas\",\n              value: bottomText,\n              onChange: e => setBottomText(e.target.value),\n              className: \"text-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), selectedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"preview-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"3. Aper\\xE7u\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meme-preview\",\n            ref: memeRef,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meme-container\",\n              children: selectedImage && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: preview,\n                alt: \"preview\",\n                style: {\n                  maxWidth: \"400px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSaveMeme,\n              disabled: isSaving,\n              className: \"action-btn save-btn\",\n              children: isSaving ? 'Sauvegarde...' : 'ðŸ’¾ Sauvegarder'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleDownload,\n              className: \"action-btn download-btn\",\n              children: \"\\uD83D\\uDCE5 T\\xE9l\\xE9charger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleShare,\n              className: \"action-btn share-btn\",\n              children: \"\\uD83D\\uDCE4 Partager\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: resetForm,\n              className: \"action-btn reset-btn\",\n              children: \"\\uD83D\\uDD04 Nouveau\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n};\n_s(MemeGenerator, \"me8sWSeH3jMEpg1x7teGL0iTh7g=\");\n_c = MemeGenerator;\nexport default MemeGenerator;\nvar _c;\n$RefreshReg$(_c, \"MemeGenerator\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","html2canvas","toast","jsxDEV","_jsxDEV","MemeGenerator","_s","selectedImage","setSelectedImage","imageUrl","setImageUrl","cloudinaryId","setCloudinaryId","topText","setTopText","bottomText","setBottomText","title","setTitle","isUploading","setIsUploading","isSaving","setIsSaving","preview","setPreview","memeRef","handleImageUpload","event","file","target","files","size","error","URL","createObjectURL","generateMemeImage","imageFile","Promise","resolve","reject","img","Image","onload","canvas","document","createElement","ctx","getContext","width","height","drawImage","topFontSize","Math","floor","font","textAlign","textBaseline","fillStyle","strokeStyle","lineWidth","strokeText","fillText","bottomFontSize","bottomTextY","textHeight","fillRect","dataURL","toDataURL","toBlob","blob","Error","onerror","src","console","log","generateFinalMemeAndUpload","current","formData","FormData","append","response","post","headers","data","success","handleSaveMeme","trim","memeData","resetForm","handleDownload","backgroundColor","scale","link","download","href","click","handleShare","navigator","share","text","url","clipboard","writeText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","id","htmlFor","placeholder","value","e","ref","alt","style","maxWidth","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/AZIZ/Desktop/gen_meme/client/src/components/MemeGenerator.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport html2canvas from 'html2canvas';\r\nimport toast from 'react-hot-toast';\r\nimport './component.css';\r\n\r\nconst MemeGenerator = () => {\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const [imageUrl, setImageUrl] = useState('');\r\n  const [cloudinaryId, setCloudinaryId] = useState('');\r\n  const [topText, setTopText] = useState('');\r\n  const [bottomText, setBottomText] = useState('');\r\n  const [title, setTitle] = useState('');\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [preview, setPreview] = useState(null)\r\n  const memeRef = useRef(null);\r\n\r\n  const handleImageUpload = async (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    if (file.size > 5 * 1024 * 1024) {\r\n      toast.error('Le fichier est trop volumineux (max 5MB)');\r\n      return;\r\n    }\r\n\r\n    setSelectedImage(file);\r\n    setPreview( URL.createObjectURL(file))\r\n    if (file){\r\n        setIsUploading(true);\r\n    }\r\n  };\r\n  \r\n  const generateMemeImage = async (imageFile, topText, bottomText) => {\r\n    return new Promise((resolve, reject) => {\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        const canvas = document.createElement(\"canvas\");\r\n        const ctx = canvas.getContext(\"2d\");\r\n  \r\n        canvas.width = img.width;\r\n        canvas.height = img.height;\r\n  \r\n        // Dessiner l'image de base\r\n        ctx.drawImage(img, 0, 0);\r\n  \r\n        // TOP TEXT\r\n        const topFontSize = Math.floor(canvas.width / 10);\r\n        ctx.font = `bold ${topFontSize}px Impact`;\r\n        ctx.textAlign = \"center\";\r\n        ctx.textBaseline = \"top\";\r\n        ctx.fillStyle = \"white\";\r\n        ctx.strokeStyle = \"black\";\r\n        ctx.lineWidth = 6;\r\n  \r\n        ctx.strokeText(topText, canvas.width / 2, 20);\r\n        ctx.fillText(topText, canvas.width / 2, 20);\r\n  \r\n        // BOTTOM TEXT avec fond noir\r\n        const bottomFontSize = topFontSize;\r\n        const bottomTextY = canvas.height / 2;\r\n        const textHeight = bottomFontSize + 20;\r\n  \r\n        ctx.fillStyle = \"black\";\r\n        ctx.fillRect(0, bottomTextY - 10, canvas.width, textHeight);\r\n  \r\n        ctx.font = `bold ${bottomFontSize}px Impact`;\r\n        ctx.textAlign = \"center\";\r\n        ctx.textBaseline = \"top\";\r\n        ctx.fillStyle = \"white\";\r\n        ctx.strokeStyle = \"black\";\r\n        ctx.lineWidth = 3;\r\n  \r\n        ctx.strokeText(bottomText, canvas.width / 2, bottomTextY);\r\n        ctx.fillText(bottomText, canvas.width / 2, bottomTextY);\r\n  \r\n        // Preview mise Ã  jour ici\r\n        const dataURL = canvas.toDataURL(\"image/png\");\r\n        setPreview(dataURL); // pour affichage live\r\n  \r\n        canvas.toBlob((blob) => {\r\n          if (blob) resolve(blob);\r\n          else reject(new Error(\"Ã‰chec gÃ©nÃ©ration mÃ¨me\"));\r\n        }, \"image/png\");\r\n      };\r\n  \r\n      img.onerror = reject;\r\n      img.src = URL.createObjectURL(imageFile);\r\n      console.log(img.src);\r\n      \r\n    });\r\n  };\r\n  \r\n  \r\nconst generateFinalMemeAndUpload = async () => {\r\n    if (!memeRef.current) return;\r\n  \r\n    setIsUploading(true);\r\n    try {\r\n    const blob = await generateMemeImage(selectedImage, topText, bottomText);\r\n  \r\n      const formData = new FormData();\r\n      formData.append('image', blob, 'meme.png');\r\n  \r\n      const response = await axios.post(\"http://localhost:5000/api/upload\", formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n  \r\n      setImageUrl(response.data.imageUrl);\r\n      setCloudinaryId(response.data.cloudinaryId);\r\n      toast.success('MÃ¨me gÃ©nÃ©rÃ© et uploadÃ©!');\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Erreur lors de la gÃ©nÃ©ration:', error);\r\n      toast.error('Erreur pendant le rendu du mÃ¨me');\r\n      return false;\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n  \r\nconst handleSaveMeme = async () => {\r\n    if (!title.trim()) {\r\n      toast.error('Veuillez ajouter un titre');\r\n      return;\r\n    }\r\n    const success = await generateFinalMemeAndUpload();\r\n    if (!success || !imageUrl) {\r\n      toast.error(\"L'image avec le texte n'a pas pu Ãªtre gÃ©nÃ©rÃ©e.\");\r\n      return;\r\n    }\r\n    setIsSaving(true);\r\n    try {\r\n      const memeData = {\r\n        title: title.trim(),\r\n        imageUrl,\r\n        cloudinaryId,\r\n      };\r\n      await axios.post('http://localhost:5000/api/memes', memeData);\r\n      toast.success('MÃ¨me sauvegardÃ© avec succÃ¨s!');\r\n      resetForm();\r\n    } catch (error) {\r\n      console.error('Erreur sauvegarde:', error);\r\n      toast.error('Erreur lors de la sauvegarde');\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n  \r\nconst handleDownload = async () => {\r\n    if (!memeRef.current) return;\r\n\r\n    try {\r\n      const canvas = await html2canvas(memeRef.current, {\r\n        backgroundColor: null,\r\n        scale: 2,\r\n      });\r\n\r\n      const link = document.createElement('a');\r\n      link.download = `${title || 'meme'}.png`;\r\n      link.href = canvas.toDataURL();\r\n      link.click();\r\n      \r\n      toast.success('MÃ¨me tÃ©lÃ©chargÃ©!');\r\n    } catch (error) {\r\n      console.error('Erreur tÃ©lÃ©chargement:', error);\r\n      toast.error('Erreur lors du tÃ©lÃ©chargement');\r\n    }\r\n  };\r\n\r\nconst handleShare = async () => {\r\n    if (navigator.share && imageUrl) {\r\n      try {\r\n        await navigator.share({\r\n          title: `MÃ¨me: ${title}`,\r\n          text: `Regardez ce mÃ¨me que j'ai crÃ©Ã©: ${title}`,\r\n          url: imageUrl,\r\n        });\r\n      } catch (error) {\r\n        console.log('Partage annulÃ©');\r\n      }\r\n    } else {\r\n      // Fallback: copier l'URL\r\n      if (imageUrl) {\r\n        navigator.clipboard.writeText(imageUrl);\r\n        toast.success('URL copiÃ©e dans le presse-papier!');\r\n      }\r\n    }\r\n  };\r\n\r\nconst resetForm = () => {\r\n    setSelectedImage(null);\r\n    setImageUrl('');\r\n    setCloudinaryId('');\r\n    setTopText('');\r\n    setBottomText('');\r\n    setTitle('');\r\n  };\r\n\r\nreturn (\r\n    <div className=\"meme-generator\">\r\n      <div className=\"generator-container\">\r\n        <h1>CrÃ©ateur de MÃ¨mes</h1>\r\n        <div className=\"generator-content\">\r\n\r\n          {/* Section Upload */}\r\n          <div className=\"upload-section\">\r\n            <h2>1. Choisir une image</h2>\r\n            <div className=\"upload-area\">\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={handleImageUpload}\r\n                className=\"file-input\"\r\n                id=\"image-upload\"\r\n              />\r\n              <label htmlFor=\"image-upload\" className=\"upload-label\">\r\n                {isUploading ? 'Upload en cours...' : 'ðŸ“¤ Choisir une image'}\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Section Texte */}\r\n          {selectedImage && (\r\n            <div className=\"text-section\">\r\n              <h2>2. Ajouter du texte</h2>\r\n              <div className=\"input-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Titre du mÃ¨me\"\r\n                  value={title}\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                  className=\"text-input\"\r\n                />\r\n              </div>\r\n              <div className=\"input-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Texte du haut\"\r\n                  value={topText}\r\n                  onChange={(e) => setTopText(e.target.value)}\r\n                  className=\"text-input\"\r\n                />\r\n              </div>\r\n              <div className=\"input-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Texte du bas\"\r\n                  value={bottomText}\r\n                  onChange={(e) => setBottomText(e.target.value)}\r\n                  className=\"text-input\"\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* AperÃ§u */}\r\n          {selectedImage && (\r\n            <div className=\"preview-section\">\r\n              <h2>3. AperÃ§u</h2>\r\n              <div className=\"meme-preview\" ref={memeRef}>\r\n                <div className=\"meme-container\">\r\n                {selectedImage && (\r\n                <img src={preview} alt=\"preview\" style={{ maxWidth: \"400px\" }} />\r\n                )}\r\n                  {/* {topText && (\r\n                    <div className=\"meme-text meme-text-bottom\">\r\n                      {topText}\r\n                    </div>\r\n                  )}\r\n                  {bottomText && (\r\n                    <div className=\"meme-text meme-text-bottom\">\r\n                      {bottomText}\r\n                    </div>\r\n                  )} */}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Actions */}\r\n              <div className=\"actions\">\r\n                <button\r\n                  onClick={handleSaveMeme}\r\n                  disabled={isSaving}\r\n                  className=\"action-btn save-btn\"\r\n                >\r\n                  {isSaving ? 'Sauvegarde...' : 'ðŸ’¾ Sauvegarder'}\r\n                </button>\r\n                <button\r\n                  onClick={handleDownload}\r\n                  className=\"action-btn download-btn\"\r\n                >\r\n                  ðŸ“¥ TÃ©lÃ©charger\r\n                </button>\r\n                <button\r\n                  onClick={handleShare}\r\n                  className=\"action-btn share-btn\"\r\n                >\r\n                  ðŸ“¤ Partager\r\n                </button>\r\n                <button\r\n                  onClick={resetForm}\r\n                  className=\"action-btn reset-btn\"\r\n                >\r\n                  ðŸ”„ Nouveau\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MemeGenerator;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,aAAa;AACrC,OAAOC,KAAK,MAAM,iBAAiB;AACnC,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACoB,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACsB,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACwB,QAAQ,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAAC0B,OAAO,EAAEC,UAAU,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM4B,OAAO,GAAG3B,MAAM,CAAC,IAAI,CAAC;EAE5B,MAAM4B,iBAAiB,GAAG,MAAOC,KAAK,IAAK;IACzC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAI,CAACF,IAAI,EAAE;IAEX,IAAIA,IAAI,CAACG,IAAI,GAAG,CAAC,GAAG,IAAI,GAAG,IAAI,EAAE;MAC/B7B,KAAK,CAAC8B,KAAK,CAAC,0CAA0C,CAAC;MACvD;IACF;IAEAxB,gBAAgB,CAACoB,IAAI,CAAC;IACtBJ,UAAU,CAAES,GAAG,CAACC,eAAe,CAACN,IAAI,CAAC,CAAC;IACtC,IAAIA,IAAI,EAAC;MACLR,cAAc,CAAC,IAAI,CAAC;IACxB;EACF,CAAC;EAED,MAAMe,iBAAiB,GAAG,MAAAA,CAAOC,SAAS,EAAEvB,OAAO,EAAEE,UAAU,KAAK;IAClE,OAAO,IAAIsB,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtC,MAAMC,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;MACvBD,GAAG,CAACE,MAAM,GAAG,MAAM;QACjB,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;QAC/C,MAAMC,GAAG,GAAGH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;QAEnCJ,MAAM,CAACK,KAAK,GAAGR,GAAG,CAACQ,KAAK;QACxBL,MAAM,CAACM,MAAM,GAAGT,GAAG,CAACS,MAAM;;QAE1B;QACAH,GAAG,CAACI,SAAS,CAACV,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;;QAExB;QACA,MAAMW,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACV,MAAM,CAACK,KAAK,GAAG,EAAE,CAAC;QACjDF,GAAG,CAACQ,IAAI,GAAG,QAAQH,WAAW,WAAW;QACzCL,GAAG,CAACS,SAAS,GAAG,QAAQ;QACxBT,GAAG,CAACU,YAAY,GAAG,KAAK;QACxBV,GAAG,CAACW,SAAS,GAAG,OAAO;QACvBX,GAAG,CAACY,WAAW,GAAG,OAAO;QACzBZ,GAAG,CAACa,SAAS,GAAG,CAAC;QAEjBb,GAAG,CAACc,UAAU,CAAC/C,OAAO,EAAE8B,MAAM,CAACK,KAAK,GAAG,CAAC,EAAE,EAAE,CAAC;QAC7CF,GAAG,CAACe,QAAQ,CAAChD,OAAO,EAAE8B,MAAM,CAACK,KAAK,GAAG,CAAC,EAAE,EAAE,CAAC;;QAE3C;QACA,MAAMc,cAAc,GAAGX,WAAW;QAClC,MAAMY,WAAW,GAAGpB,MAAM,CAACM,MAAM,GAAG,CAAC;QACrC,MAAMe,UAAU,GAAGF,cAAc,GAAG,EAAE;QAEtChB,GAAG,CAACW,SAAS,GAAG,OAAO;QACvBX,GAAG,CAACmB,QAAQ,CAAC,CAAC,EAAEF,WAAW,GAAG,EAAE,EAAEpB,MAAM,CAACK,KAAK,EAAEgB,UAAU,CAAC;QAE3DlB,GAAG,CAACQ,IAAI,GAAG,QAAQQ,cAAc,WAAW;QAC5ChB,GAAG,CAACS,SAAS,GAAG,QAAQ;QACxBT,GAAG,CAACU,YAAY,GAAG,KAAK;QACxBV,GAAG,CAACW,SAAS,GAAG,OAAO;QACvBX,GAAG,CAACY,WAAW,GAAG,OAAO;QACzBZ,GAAG,CAACa,SAAS,GAAG,CAAC;QAEjBb,GAAG,CAACc,UAAU,CAAC7C,UAAU,EAAE4B,MAAM,CAACK,KAAK,GAAG,CAAC,EAAEe,WAAW,CAAC;QACzDjB,GAAG,CAACe,QAAQ,CAAC9C,UAAU,EAAE4B,MAAM,CAACK,KAAK,GAAG,CAAC,EAAEe,WAAW,CAAC;;QAEvD;QACA,MAAMG,OAAO,GAAGvB,MAAM,CAACwB,SAAS,CAAC,WAAW,CAAC;QAC7C3C,UAAU,CAAC0C,OAAO,CAAC,CAAC,CAAC;;QAErBvB,MAAM,CAACyB,MAAM,CAAEC,IAAI,IAAK;UACtB,IAAIA,IAAI,EAAE/B,OAAO,CAAC+B,IAAI,CAAC,CAAC,KACnB9B,MAAM,CAAC,IAAI+B,KAAK,CAAC,uBAAuB,CAAC,CAAC;QACjD,CAAC,EAAE,WAAW,CAAC;MACjB,CAAC;MAED9B,GAAG,CAAC+B,OAAO,GAAGhC,MAAM;MACpBC,GAAG,CAACgC,GAAG,GAAGvC,GAAG,CAACC,eAAe,CAACE,SAAS,CAAC;MACxCqC,OAAO,CAACC,GAAG,CAAClC,GAAG,CAACgC,GAAG,CAAC;IAEtB,CAAC,CAAC;EACJ,CAAC;EAGH,MAAMG,0BAA0B,GAAG,MAAAA,CAAA,KAAY;IAC3C,IAAI,CAAClD,OAAO,CAACmD,OAAO,EAAE;IAEtBxD,cAAc,CAAC,IAAI,CAAC;IACpB,IAAI;MACJ,MAAMiD,IAAI,GAAG,MAAMlC,iBAAiB,CAAC5B,aAAa,EAAEM,OAAO,EAAEE,UAAU,CAAC;MAEtE,MAAM8D,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEV,IAAI,EAAE,UAAU,CAAC;MAE1C,MAAMW,QAAQ,GAAG,MAAMhF,KAAK,CAACiF,IAAI,CAAC,kCAAkC,EAAEJ,QAAQ,EAAE;QAC9EK,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEFxE,WAAW,CAACsE,QAAQ,CAACG,IAAI,CAAC1E,QAAQ,CAAC;MACnCG,eAAe,CAACoE,QAAQ,CAACG,IAAI,CAACxE,YAAY,CAAC;MAC3CT,KAAK,CAACkF,OAAO,CAAC,yBAAyB,CAAC;MACxC,OAAO,IAAI;IACb,CAAC,CAAC,OAAOpD,KAAK,EAAE;MACdyC,OAAO,CAACzC,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrD9B,KAAK,CAAC8B,KAAK,CAAC,iCAAiC,CAAC;MAC9C,OAAO,KAAK;IACd,CAAC,SAAS;MACRZ,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC;EAEH,MAAMiE,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACpE,KAAK,CAACqE,IAAI,CAAC,CAAC,EAAE;MACjBpF,KAAK,CAAC8B,KAAK,CAAC,2BAA2B,CAAC;MACxC;IACF;IACA,MAAMoD,OAAO,GAAG,MAAMT,0BAA0B,CAAC,CAAC;IAClD,IAAI,CAACS,OAAO,IAAI,CAAC3E,QAAQ,EAAE;MACzBP,KAAK,CAAC8B,KAAK,CAAC,gDAAgD,CAAC;MAC7D;IACF;IACAV,WAAW,CAAC,IAAI,CAAC;IACjB,IAAI;MACF,MAAMiE,QAAQ,GAAG;QACftE,KAAK,EAAEA,KAAK,CAACqE,IAAI,CAAC,CAAC;QACnB7E,QAAQ;QACRE;MACF,CAAC;MACD,MAAMX,KAAK,CAACiF,IAAI,CAAC,iCAAiC,EAAEM,QAAQ,CAAC;MAC7DrF,KAAK,CAACkF,OAAO,CAAC,8BAA8B,CAAC;MAC7CI,SAAS,CAAC,CAAC;IACb,CAAC,CAAC,OAAOxD,KAAK,EAAE;MACdyC,OAAO,CAACzC,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1C9B,KAAK,CAAC8B,KAAK,CAAC,8BAA8B,CAAC;IAC7C,CAAC,SAAS;MACRV,WAAW,CAAC,KAAK,CAAC;IACpB;EACF,CAAC;EAEH,MAAMmE,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAAChE,OAAO,CAACmD,OAAO,EAAE;IAEtB,IAAI;MACF,MAAMjC,MAAM,GAAG,MAAM1C,WAAW,CAACwB,OAAO,CAACmD,OAAO,EAAE;QAChDc,eAAe,EAAE,IAAI;QACrBC,KAAK,EAAE;MACT,CAAC,CAAC;MAEF,MAAMC,IAAI,GAAGhD,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACxC+C,IAAI,CAACC,QAAQ,GAAG,GAAG5E,KAAK,IAAI,MAAM,MAAM;MACxC2E,IAAI,CAACE,IAAI,GAAGnD,MAAM,CAACwB,SAAS,CAAC,CAAC;MAC9ByB,IAAI,CAACG,KAAK,CAAC,CAAC;MAEZ7F,KAAK,CAACkF,OAAO,CAAC,kBAAkB,CAAC;IACnC,CAAC,CAAC,OAAOpD,KAAK,EAAE;MACdyC,OAAO,CAACzC,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C9B,KAAK,CAAC8B,KAAK,CAAC,+BAA+B,CAAC;IAC9C;EACF,CAAC;EAEH,MAAMgE,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAIC,SAAS,CAACC,KAAK,IAAIzF,QAAQ,EAAE;MAC/B,IAAI;QACF,MAAMwF,SAAS,CAACC,KAAK,CAAC;UACpBjF,KAAK,EAAE,SAASA,KAAK,EAAE;UACvBkF,IAAI,EAAE,mCAAmClF,KAAK,EAAE;UAChDmF,GAAG,EAAE3F;QACP,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOuB,KAAK,EAAE;QACdyC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;MAC/B;IACF,CAAC,MAAM;MACL;MACA,IAAIjE,QAAQ,EAAE;QACZwF,SAAS,CAACI,SAAS,CAACC,SAAS,CAAC7F,QAAQ,CAAC;QACvCP,KAAK,CAACkF,OAAO,CAAC,mCAAmC,CAAC;MACpD;IACF;EACF,CAAC;EAEH,MAAMI,SAAS,GAAGA,CAAA,KAAM;IACpBhF,gBAAgB,CAAC,IAAI,CAAC;IACtBE,WAAW,CAAC,EAAE,CAAC;IACfE,eAAe,CAAC,EAAE,CAAC;IACnBE,UAAU,CAAC,EAAE,CAAC;IACdE,aAAa,CAAC,EAAE,CAAC;IACjBE,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAEH,oBACId,OAAA;IAAKmG,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC7BpG,OAAA;MAAKmG,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAClCpG,OAAA;QAAAoG,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BxG,OAAA;QAAKmG,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAGhCpG,OAAA;UAAKmG,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7BpG,OAAA;YAAAoG,QAAA,EAAI;UAAoB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7BxG,OAAA;YAAKmG,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1BpG,OAAA;cACEyG,IAAI,EAAC,MAAM;cACXC,MAAM,EAAC,SAAS;cAChBC,QAAQ,EAAErF,iBAAkB;cAC5B6E,SAAS,EAAC,YAAY;cACtBS,EAAE,EAAC;YAAc;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClB,CAAC,eACFxG,OAAA;cAAO6G,OAAO,EAAC,cAAc;cAACV,SAAS,EAAC,cAAc;cAAAC,QAAA,EACnDrF,WAAW,GAAG,oBAAoB,GAAG;YAAsB;cAAAsF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,EAGLrG,aAAa,iBACZH,OAAA;UAAKmG,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3BpG,OAAA;YAAAoG,QAAA,EAAI;UAAmB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC5BxG,OAAA;YAAKmG,SAAS,EAAC,aAAa;YAAAC,QAAA,eAC1BpG,OAAA;cACEyG,IAAI,EAAC,MAAM;cACXK,WAAW,EAAC,kBAAe;cAC3BC,KAAK,EAAElG,KAAM;cACb8F,QAAQ,EAAGK,CAAC,IAAKlG,QAAQ,CAACkG,CAAC,CAACvF,MAAM,CAACsF,KAAK,CAAE;cAC1CZ,SAAS,EAAC;YAAY;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACNxG,OAAA;YAAKmG,SAAS,EAAC,aAAa;YAAAC,QAAA,eAC1BpG,OAAA;cACEyG,IAAI,EAAC,MAAM;cACXK,WAAW,EAAC,eAAe;cAC3BC,KAAK,EAAEtG,OAAQ;cACfkG,QAAQ,EAAGK,CAAC,IAAKtG,UAAU,CAACsG,CAAC,CAACvF,MAAM,CAACsF,KAAK,CAAE;cAC5CZ,SAAS,EAAC;YAAY;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACNxG,OAAA;YAAKmG,SAAS,EAAC,aAAa;YAAAC,QAAA,eAC1BpG,OAAA;cACEyG,IAAI,EAAC,MAAM;cACXK,WAAW,EAAC,cAAc;cAC1BC,KAAK,EAAEpG,UAAW;cAClBgG,QAAQ,EAAGK,CAAC,IAAKpG,aAAa,CAACoG,CAAC,CAACvF,MAAM,CAACsF,KAAK,CAAE;cAC/CZ,SAAS,EAAC;YAAY;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN,EAGArG,aAAa,iBACZH,OAAA;UAAKmG,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9BpG,OAAA;YAAAoG,QAAA,EAAI;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClBxG,OAAA;YAAKmG,SAAS,EAAC,cAAc;YAACc,GAAG,EAAE5F,OAAQ;YAAA+E,QAAA,eACzCpG,OAAA;cAAKmG,SAAS,EAAC,gBAAgB;cAAAC,QAAA,EAC9BjG,aAAa,iBACdH,OAAA;gBAAKoE,GAAG,EAAEjD,OAAQ;gBAAC+F,GAAG,EAAC,SAAS;gBAACC,KAAK,EAAE;kBAAEC,QAAQ,EAAE;gBAAQ;cAAE;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAC/D;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAWI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAGNxG,OAAA;YAAKmG,SAAS,EAAC,SAAS;YAAAC,QAAA,gBACtBpG,OAAA;cACEqH,OAAO,EAAEpC,cAAe;cACxBqC,QAAQ,EAAErG,QAAS;cACnBkF,SAAS,EAAC,qBAAqB;cAAAC,QAAA,EAE9BnF,QAAQ,GAAG,eAAe,GAAG;YAAgB;cAAAoF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxC,CAAC,eACTxG,OAAA;cACEqH,OAAO,EAAEhC,cAAe;cACxBc,SAAS,EAAC,yBAAyB;cAAAC,QAAA,EACpC;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTxG,OAAA;cACEqH,OAAO,EAAEzB,WAAY;cACrBO,SAAS,EAAC,sBAAsB;cAAAC,QAAA,EACjC;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTxG,OAAA;cACEqH,OAAO,EAAEjC,SAAU;cACnBe,SAAS,EAAC,sBAAsB;cAAAC,QAAA,EACjC;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtG,EAAA,CArTID,aAAa;AAAAsH,EAAA,GAAbtH,aAAa;AAuTnB,eAAeA,aAAa;AAAC,IAAAsH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}